services:
  postgresql:
    container_name: patient_base_de_donnee
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: patient_db
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  patient-service:
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-PROD}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    build:
      context: ./Services/patient-service
      dockerfile: Dockerfile
    container_name: patient-service
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
      - discovery-service
    networks:
      - microservices-net

  discovery-service:
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-PROD}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    build:
      context: ./Services/discovery
      dockerfile: Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  gateway-service:
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-PROD}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    build:
      context: ./Services/gateway
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "8222:8222"
    networks:
      - microservices-net

  note-service:
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    build:
      context: ./Services/note-service
      dockerfile: Dockerfile
    container_name: note-service
    ports:
      - "8083:8083"
    networks:
      - microservices-net

  risque-service:
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-PROD}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    build:
      context: ./Services/risque-service
      dockerfile: Dockerfile
    container_name: risque-service
    ports:
      - "8082:8082"
    networks:
      - microservices-net

  config-server:
    build:
      context: ./Services/risque-service
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - microservices-net

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  mongodb:
    image: mongo
    container_name: mongo_note_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass


networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo: